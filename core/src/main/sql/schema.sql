
CREATE TABLE IF NOT EXISTS "user" (
  "ID" BIGSERIAL PRIMARY KEY,
  "NAME" VARCHAR NOT NULL UNIQUE,
  "EMAIL" VARCHAR NOT NULL,
  "PHONE" VARCHAR NOT NULL,
  "PASSHASH" VARCHAR NOT NULL,
  "CREATED_AT" TIMESTAMP NOT NULL DEFAULT NOW(),
  "STATUS" INTEGER NOT NULL,
  "ROLE" INTEGER NOT NULL -- 0 = Admin, 1 = operator
);
-- CREATE TABLE IF NOT EXISTS "OPERATOR" (
--   "ID" BIGSERIAL PRIMARY KEY,
--   "NAME" VARCHAR NOT NULL UNIQUE,
--   "ABILITIES" VARCHAR NOT NULL,
--   "PASSHASH" VARCHAR NOT NULL,
--   "STATUS" INTEGER NOT NULL
-- );
CREATE TABLE IF NOT EXISTS "investor" (
  "ID" BIGSERIAL PRIMARY KEY,
  "NAME" VARCHAR NOT NULL UNIQUE,
  "FULL_NAME" VARCHAR(160) NOT NULL,
  "ROLE" INTEGER NOT NULL,
  "SEX" INTEGER NOT NULL,
  "NATION" VARCHAR(100) NOT NULL,
  "BIRTH_PLACE" VARCHAR(160) NOT NULL,
  "BIRTH_DATE" DATE NOT NULL,
  "RELIGION" VARCHAR(100) NOT NULL,
  "EDUCATION" VARCHAR(100) NOT NULL,
  "TITLE_FRONT" VARCHAR(20) NOT NULL DEFAULT '',
  "TITLE_BACK" VARCHAR(20) NOT NULL DEFAULT '',
  "MARITAL_STATUS" INT NOT NULL,
  "MOTHER_NAME" VARCHAR(160) NOT NULL,
  "PASSHASH" VARCHAR NOT NULL,
  "STATUS" INTEGER NOT NULL DEFAULT 1
);

CREATE TABLE IF NOT EXISTS "investor_heir" (
  "INVESTOR_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "FULL_NAME" VARCHAR(160) NOT NULL,
  "RELATIONSHIP" VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS "investor_contact" (
  "INVESTOR_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "ADDRESS" VARCHAR NOT NULL,
  "VILLAGE" VARCHAR NOT NULL,
  "DISTRICT" VARCHAR NOT NULL,
  "CITY" VARCHAR NOT NULL,
  "PROVINCE" VARCHAR NOT NULL,
  "COUNTRY" VARCHAR NOT NULL,
  "POSTAL_CODE" VARCHAR(100) NOT NULL,
  "EMAIL" VARCHAR NOT NULL,
  "HOME_PHONE" VARCHAR(120) NOT NULL,
  "MOBILE_PHONE" VARCHAR(120) NOT NULL,
  "BB_PIN" VARCHAR(20) NOT NULL,
  "IDENTITY_BASED_ON" INTEGER NOT NULL, -- ini untuk misal 1 = berdasarkan ID, 2 = tempat tinggal saat ini
  "kind" INTEGER NOT NULL -- 1 = personal, 2 = darurat
);

CREATE TABLE IF NOT EXISTS "investor_other_contact" (
  "INVESTOR_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "KIND" VARCHAR(100) NOT NULL,
  "IDENTITY" VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS "investor_legal_identity" (
  "INVESTOR_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "KIND" VARCHAR(100) NOT NULL,
  "IDENTITY" VARCHAR NOT NULL,
  "VALID_UNTIL" DATE
);

CREATE TABLE IF NOT EXISTS "investor_job" (
  "ID" BIGSERIAL NOT NULL PRIMARY KEY,
  "INVESTOR_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "kind" VARCHAR NOT NULL,
  "entity_name" VARCHAR NOT NULL,
  "business_line" VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS "business_contact" (
  "INVESTOR_JOB_ID" BIGINT NOT NULL REFERENCES "investor_job" ("ID") ON DELETE CASCADE,
  "ADDRESS" VARCHAR NOT NULL,
  "VILLAGE" VARCHAR NOT NULL,
  "DISTRICT" VARCHAR NOT NULL,
  "CITY" VARCHAR NOT NULL,
  "PROVINCE" VARCHAR NOT NULL,
  "COUNTRY" VARCHAR NOT NULL,
  "POSTAL_CODE" VARCHAR(100) NOT NULL,
  "EMAIL" VARCHAR NOT NULL,
  "OFFICE_PHONE" VARCHAR(120) NOT NULL,
  "MOBILE_PHONE" VARCHAR(120) NOT NULL,
  "BB_PIN" VARCHAR(20) NOT NULL
);

-- BUSINESS ------------------

CREATE TABLE IF NOT EXISTS "business" (
  "ID" BIGSERIAL PRIMARY KEY,
  "NAME" VARCHAR NOT NULL,
  "DESC" VARCHAR NOT NULL,
  "TAGS" VARCHAR NOT NULL,
  "FUND" DOUBLE PRECISION NOT NULL,
  "SHARE" DOUBLE PRECISION NOT NULL,
  "STATE" INT NOT NULL,
  "SHARE_TIME" INT NOT NULL,
  "SHARE_PERIOD" INT NOT NULL,
  "SAVING" DOUBLE PRECISION NOT NULL, -- balance
  "CREATED_AT" TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE TABLE IF NOT EXISTS "business_group" (
  "ID" BIGINT NOT NULL PRIMARY KEY,
  "NAME" VARCHAR NOT NULL,
  "DESC" VARCHAR NOT NULL
);
CREATE TABLE IF NOT EXISTS "business_group_link" (
  "ID" BIGINT NOT NULL PRIMARY KEY,
  "BUS_GROUP_ID" BIGINT NOT NULL,
  "BUS_ID" BIGINT NOT NULL
);
CREATE TABLE IF NOT EXISTS "business_profit" (
  "ID" BIGSERIAL PRIMARY KEY,
  "BUS_ID" BIGINT NOT NULL,
  "OMZET" DOUBLE PRECISION NOT NULL,
  "PROFIT" DOUBLE PRECISION NOT NULL,
  "TS" TIMESTAMP NOT NULL,
  "MUTATOR_ID" BIGINT NOT NULL,
  "MUTATOR_ROLE" INTEGER NOT NULL,
  "INFO" VARCHAR NOT NULL,
  "SHARED" BOOL NOT NULL DEFAULT FALSE,
  "SHARED_AT" TIMESTAMP,
  "STATUS" INTEGER NOT NULL DEFAULT 0
);
CREATE TABLE IF NOT EXISTS "profit_share_journal" (
  "BUS_ID" BIGINT NOT NULL,
  "BUS_PROF_ID" BIGINT NOT NULL,
  "INV_ID" BIGINT NOT NULL,
  "AMOUNT" DOUBLE PRECISION NOT NULL,
  "SHARE_METHOD" INT NOT NULL DEFAULT 2, -- 2=MANUAL
  "INITIATOR" VARCHAR(100) DEFAULT '',
  "TS" TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE TABLE IF NOT EXISTS "employee" (
  "ID" BIGSERIAL PRIMARY KEY,
  "BUS_ID" BIGINT NOT NULL,
  "NAME" VARCHAR(100) NOT NULL,
  "JOB_DESC" VARCHAR(160) NOT NULL,
  "SALARY" DOUBLE PRECISION NOT NULL,
  "STATUS" INTEGER NOT NULL
);
CREATE TABLE IF NOT EXISTS "business_asset" (
  "ID" BIGSERIAL PRIMARY KEY,
  "BUS_ID" BIGINT NOT NULL,
  "CONTENT" VARCHAR NOT NULL,
  "KIND" INTEGER NOT NULL,
  "CREATOR" BIGINT NOT NULL,
  "CREATOR_ROLE" INTEGER NOT NULL,
  "TS" TIMESTAMP NOT NULL,
  "LAST_UPDATED" TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS "business_account_mutation" (
  "ID" BIGSERIAL PRIMARY KEY,
  "BUS_ID" BIGINT NOT NULL,
  "KIND" INTEGER NOT NULL, -- mutation kind
  "AMOUNT" DOUBLE PRECISION NOT NULL,
  "INFO" VARCHAR(500) NOT NULL,
  "INITIATOR" VARCHAR(100) NOT NULL,
  "TS" TIMESTAMP NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS "investor_stock" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "investor_owner_id" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "price" DOUBLE PRECISION NOT NULL,
  "buy_purpose" VARCHAR NOT NULL,
  "fund_source" VARCHAR NOT NULL,
  "creation_time" TIMESTAMP NOT NULL DEFAULT NOW(),
  "processed" BOOLEAN NOT NULL DEFAULT FALSE,
  "processed_by_user_id" BIGINT NOT NULL DEFAULT 1 REFERENCES "user" ("ID") ON DELETE SET DEFAULT,
  "accepted" BOOLEAN NOT NULL DEFAULT FALSE,
  "accepted_by_user_id" BIGINT NOT NULL DEFAULT 1 REFERENCES "user" ("ID") ON DELETE SET DEFAULT
);


CREATE TABLE IF NOT EXISTS "invest" (
  "id" BIGSERIAL PRIMARY KEY,
  "investor_id" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "business_id" BIGINT NOT NULL DEFAULT 1 REFERENCES "business" ("ID") ON DELETE SET DEFAULT,
  "business_kind" INT NOT NULL,
  "amount" DOUBLE PRECISION NOT NULL,
  "bus_kind" INTEGER NOT NULL,
  "ts" TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS "mutation" (
  "ID" BIGSERIAL PRIMARY KEY,
  "INV_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "KIND" INT NOT NULL, -- mutation kind
  "AMOUNT" DOUBLE PRECISION NOT NULL,
  "REF" VARCHAR,
  "INITIATOR" VARCHAR(100) DEFAULT '',
  "TS" TIMESTAMP NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS "investor_balance" (
  "ID" BIGSERIAL PRIMARY KEY,
  "INV_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "AMOUNT" DOUBLE PRECISION NOT NULL
);


CREATE TABLE IF NOT EXISTS "project_watcher" (
  "ID" BIGSERIAL PRIMARY KEY,
  "INV_ID" BIGINT NOT NULL REFERENCES "investor" ("ID") ON DELETE CASCADE ON UPDATE CASCADE,
  "BUS_ID" BIGINT NOT NULL
);



----------- API ------------------------


CREATE TABLE IF NOT EXISTS "api_client" (
  "ID" BIGSERIAL PRIMARY KEY,
  "NAME" VARCHAR NOT NULL,
  "DESC" VARCHAR NOT NULL,
  "CREATOR_ID" BIGINT NOT NULL,
  "CREATOR_ROLE" INTEGER NOT NULL,
  "KEY" VARCHAR NOT NULL,
  "SUSPENDED" BOOL NOT NULL);

CREATE TABLE IF NOT EXISTS "api_client_access" (
  "ID" BIGSERIAL PRIMARY KEY,
  "API_CLIENT_ID" BIGINT NOT NULL,
  "GRANT" VARCHAR NOT NULL,
  "TARGET" VARCHAR NOT NULL);


--------- PROJECT ----------------------


CREATE TABLE IF NOT EXISTS "project_report" (
  "ID" BIGSERIAL PRIMARY KEY,
  "BUS_ID" BIGINT NOT NULL,
  "INFO" VARCHAR NOT NULL,
  "PERCENTAGE" DOUBLE PRECISION NOT NULL,
  "INITIATOR" VARCHAR NOT NULL,
  "TS" TIMESTAMP NOT NULL DEFAULT NOW()
);

------------- MISC -----------------

CREATE TABLE IF NOT EXISTS "activity_stream" (
  "ID" BIGSERIAL PRIMARY KEY,
  "ACTIVITY" VARCHAR(160) NOT NULL,
  "INFO" VARCHAR NOT NULL,
  "SUBSCRIBER_ID" BIGINT NOT NULL,
  "SUBSCRIBER_KIND" INTEGER NOT NULL,
  "TS" TIMESTAMP NOT NULL DEFAULT NOW()
);

